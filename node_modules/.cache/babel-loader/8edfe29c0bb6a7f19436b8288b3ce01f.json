{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  axios.delete(`${baseUrl}/${id}`);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n};","map":{"version":3,"sources":["/Users/drdap/Documents/Learning/Full Stack Open 2021/Part 02/phonebookv2/src/services/personsService.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","create","newObject","post","remove","id","delete","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,+BAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,SAAOE,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAGA,QAAQ,CAACC,IAAjC,CAAP;AACH,CAHD;;AAKA,MAAMC,MAAM,GAAIC,SAAD,IAAe;AAC1B,QAAMN,OAAO,GAAGH,KAAK,CAACU,IAAN,CAAWT,OAAX,EAAoBQ,SAApB,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMI,MAAM,GAAIC,EAAD,IAAQ;AACnBZ,EAAAA,KAAK,CAACa,MAAN,CAAc,GAAEZ,OAAQ,IAAGW,EAAG,EAA9B;AACH,CAFD;;AAIA,MAAME,MAAM,GAAG,CAACF,EAAD,EAAKH,SAAL,KAAmB;AAC/B,QAAMN,OAAO,GAAGH,KAAK,CAACe,GAAN,CAAW,GAAEd,OAAQ,IAAGW,EAAG,EAA3B,EAA8BH,SAA9B,CAAhB;AACC,SAAON,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,eAAe;AAACL,EAAAA,MAAD;AAASM,EAAAA,MAAT;AAAiBM,EAAAA,MAAjB;AAAyBH,EAAAA;AAAzB,CAAf","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'http://localhost:3001/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response=> response.data);\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n}\n\nconst remove = (id) => {\n    axios.delete(`${baseUrl}/${id}`);\n}\n\nconst update = (id, newObject) => {\n   const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nexport default {getAll, create, update, remove};"]},"metadata":{},"sourceType":"module"}